{
  "version": 3,
  "sources": [
    "../../hello_world/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMQ;AAAkC;AAAlC;AACA;AAAkC;AAAlC;AAHR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;AAAA;;AA4CK;;AAAA;AAAA;AAAA;;AAAA;AA5CL;;;AAAA;;;AA4CK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AApBL;;;AAAA;;;AAoBK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AALL;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAKK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALL;;AAAA;;;;;;;;;AAKA;;;AAWoC;AAAA;AAAA;AAAA;AAA4B;AAA5B;AAA5B;AAAA;AAAA;AAEO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAP;AAER;;;AAKoC;AAAA;AAAA;AAAA;AAA4B;AAA5B;AAA5B;AAAA;AAAA;AAEO;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAA+C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA/C;AAAP;AAKO;AAAA;AAAA;AAAA;AAAP;AAKO;AAAA;AAAA;AAAA;AAAP;AAOR;;;AAGe;;;;;;;;;AAAA;;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.hello_world.contract.HelloWorld.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0"
    },
    "5": {
      "op": "bytecblock 0x151f7c75 \"total_agencies\" \"total_searches\""
    },
    "42": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "44": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "47": {
      "op": "bytec_1 // \"total_agencies\"",
      "defined_out": [
        "\"total_agencies\""
      ],
      "stack_out": [
        "\"total_agencies\""
      ]
    },
    "48": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"total_agencies\"",
        "0"
      ],
      "stack_out": [
        "\"total_agencies\"",
        "0"
      ]
    },
    "49": {
      "op": "app_global_put",
      "stack_out": []
    },
    "50": {
      "op": "bytec_2 // \"total_searches\"",
      "defined_out": [
        "\"total_searches\""
      ],
      "stack_out": [
        "\"total_searches\""
      ]
    },
    "51": {
      "op": "intc_1 // 0",
      "stack_out": [
        "\"total_searches\"",
        "0"
      ]
    },
    "52": {
      "op": "app_global_put",
      "stack_out": []
    },
    "53": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "55": {
      "op": "bz main_bare_routing@11",
      "stack_out": []
    },
    "58": {
      "op": "pushbytess 0x212b4225 0x98ff9d87 0xaf362e91 0xd62149a7 0x7b16dc7f 0x02bece11 // method \"register_agency(string,string,string)string\", method \"search_agencies(string)string\", method \"get_agency_count()uint64\", method \"get_search_count()uint64\", method \"get_registry_info()string\", method \"hello(string)string\"",
      "defined_out": [
        "Method(get_agency_count()uint64)",
        "Method(get_registry_info()string)",
        "Method(get_search_count()uint64)",
        "Method(hello(string)string)",
        "Method(register_agency(string,string,string)string)",
        "Method(search_agencies(string)string)"
      ],
      "stack_out": [
        "Method(register_agency(string,string,string)string)",
        "Method(search_agencies(string)string)",
        "Method(get_agency_count()uint64)",
        "Method(get_search_count()uint64)",
        "Method(get_registry_info()string)",
        "Method(hello(string)string)"
      ]
    },
    "90": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(get_agency_count()uint64)",
        "Method(get_registry_info()string)",
        "Method(get_search_count()uint64)",
        "Method(hello(string)string)",
        "Method(register_agency(string,string,string)string)",
        "Method(search_agencies(string)string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(register_agency(string,string,string)string)",
        "Method(search_agencies(string)string)",
        "Method(get_agency_count()uint64)",
        "Method(get_search_count()uint64)",
        "Method(get_registry_info()string)",
        "Method(hello(string)string)",
        "tmp%2#0"
      ]
    },
    "93": {
      "op": "match main_register_agency_route@5 main_search_agencies_route@6 main_get_agency_count_route@7 main_get_search_count_route@8 main_get_registry_info_route@9 main_hello_route@10",
      "stack_out": []
    },
    "107": {
      "block": "main_after_if_else@13",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "108": {
      "op": "return",
      "stack_out": []
    },
    "109": {
      "block": "main_hello_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "111": {
      "op": "!",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "112": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "113": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "115": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "116": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "119": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "122": {
      "callsub": "smart_contracts.hello_world.contract.HelloWorld.hello",
      "op": "callsub hello",
      "defined_out": [
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0"
      ]
    },
    "125": {
      "op": "dup",
      "defined_out": [
        "to_encode%5#0",
        "to_encode%5#0 (copy)"
      ],
      "stack_out": [
        "to_encode%5#0",
        "to_encode%5#0 (copy)"
      ]
    },
    "126": {
      "op": "len",
      "defined_out": [
        "length%3#0",
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0",
        "length%3#0"
      ]
    },
    "127": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0",
        "as_bytes%3#0"
      ]
    },
    "128": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%3#0",
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0",
        "length_uint16%3#0"
      ]
    },
    "131": {
      "op": "swap",
      "stack_out": [
        "length_uint16%3#0",
        "to_encode%5#0"
      ]
    },
    "132": {
      "op": "concat",
      "defined_out": [
        "encoded_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0"
      ]
    },
    "133": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0",
        "0x151f7c75"
      ]
    },
    "134": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%3#0"
      ]
    },
    "135": {
      "op": "concat",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "136": {
      "op": "log",
      "stack_out": []
    },
    "137": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "138": {
      "op": "return",
      "stack_out": []
    },
    "139": {
      "block": "main_get_registry_info_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "141": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "142": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "143": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "145": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "146": {
      "op": "pushbytes 0x151f7c75003a436c69656e742d4167656e6379205265676973747279202d2041637469766520616e6420747261636b696e6720726567697374726174696f6e73",
      "defined_out": [
        "0x151f7c75003a436c69656e742d4167656e6379205265676973747279202d2041637469766520616e6420747261636b696e6720726567697374726174696f6e73"
      ],
      "stack_out": [
        "0x151f7c75003a436c69656e742d4167656e6379205265676973747279202d2041637469766520616e6420747261636b696e6720726567697374726174696f6e73"
      ]
    },
    "212": {
      "op": "log",
      "stack_out": []
    },
    "213": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "214": {
      "op": "return",
      "stack_out": []
    },
    "215": {
      "block": "main_get_search_count_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "217": {
      "op": "!",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "218": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "219": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "221": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "222": {
      "callsub": "smart_contracts.hello_world.contract.HelloWorld.get_search_count",
      "op": "callsub get_search_count",
      "defined_out": [
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0"
      ]
    },
    "225": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "226": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "227": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "228": {
      "op": "concat",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "229": {
      "op": "log",
      "stack_out": []
    },
    "230": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "231": {
      "op": "return",
      "stack_out": []
    },
    "232": {
      "block": "main_get_agency_count_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "234": {
      "op": "!",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "235": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "236": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "238": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "239": {
      "callsub": "smart_contracts.hello_world.contract.HelloWorld.get_agency_count",
      "op": "callsub get_agency_count",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "242": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "243": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "244": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "245": {
      "op": "concat",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "246": {
      "op": "log",
      "stack_out": []
    },
    "247": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "248": {
      "op": "return",
      "stack_out": []
    },
    "249": {
      "block": "main_search_agencies_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "251": {
      "op": "!",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "252": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "253": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "255": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "256": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "259": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "262": {
      "callsub": "smart_contracts.hello_world.contract.HelloWorld.search_agencies",
      "op": "callsub search_agencies",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "265": {
      "op": "dup",
      "defined_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "266": {
      "op": "len",
      "defined_out": [
        "length%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length%1#0"
      ]
    },
    "267": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "as_bytes%1#0"
      ]
    },
    "268": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length_uint16%1#0"
      ]
    },
    "271": {
      "op": "swap",
      "stack_out": [
        "length_uint16%1#0",
        "to_encode%1#0"
      ]
    },
    "272": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0"
      ]
    },
    "273": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "0x151f7c75"
      ]
    },
    "274": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ]
    },
    "275": {
      "op": "concat",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "276": {
      "op": "log",
      "stack_out": []
    },
    "277": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "278": {
      "op": "return",
      "stack_out": []
    },
    "279": {
      "block": "main_register_agency_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "281": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "282": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "283": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "285": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "286": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "289": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "292": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "295": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "298": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "301": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%10#0",
        "tmp%12#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "304": {
      "callsub": "smart_contracts.hello_world.contract.HelloWorld.register_agency",
      "op": "callsub register_agency",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "307": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "308": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "309": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "310": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "313": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "314": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "315": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "316": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "317": {
      "op": "concat",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "318": {
      "op": "log",
      "stack_out": []
    },
    "319": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "320": {
      "op": "return",
      "stack_out": []
    },
    "321": {
      "block": "main_bare_routing@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "323": {
      "op": "bnz main_after_if_else@13",
      "stack_out": []
    },
    "326": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "328": {
      "op": "!",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "329": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "330": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "331": {
      "op": "return",
      "stack_out": []
    },
    "332": {
      "subroutine": "smart_contracts.hello_world.contract.HelloWorld.register_agency",
      "params": {
        "name#0": "bytes",
        "description#0": "bytes",
        "contact_info#0": "bytes"
      },
      "block": "register_agency",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "335": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "336": {
      "op": "bytec_1 // \"total_agencies\"",
      "defined_out": [
        "\"total_agencies\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_agencies\""
      ]
    },
    "337": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "338": {
      "error": "check self.total_agencies exists",
      "op": "assert // check self.total_agencies exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "339": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "340": {
      "op": "+",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "341": {
      "op": "bytec_1 // \"total_agencies\"",
      "stack_out": [
        "materialized_values%0#0",
        "\"total_agencies\""
      ]
    },
    "342": {
      "op": "swap",
      "stack_out": [
        "\"total_agencies\"",
        "materialized_values%0#0"
      ]
    },
    "343": {
      "op": "app_global_put",
      "stack_out": []
    },
    "344": {
      "op": "pushbytes \"Agency registered successfully: \"",
      "defined_out": [
        "\"Agency registered successfully: \""
      ],
      "stack_out": [
        "\"Agency registered successfully: \""
      ]
    },
    "378": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"Agency registered successfully: \"",
        "name#0 (copy)"
      ],
      "stack_out": [
        "\"Agency registered successfully: \"",
        "name#0 (copy)"
      ]
    },
    "380": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "381": {
      "retsub": true,
      "op": "retsub"
    },
    "382": {
      "subroutine": "smart_contracts.hello_world.contract.HelloWorld.search_agencies",
      "params": {
        "search_term#0": "bytes"
      },
      "block": "search_agencies",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "385": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "386": {
      "op": "bytec_2 // \"total_searches\"",
      "defined_out": [
        "\"total_searches\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_searches\""
      ]
    },
    "387": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "388": {
      "error": "check self.total_searches exists",
      "op": "assert // check self.total_searches exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "389": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "390": {
      "op": "+",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "391": {
      "op": "bytec_2 // \"total_searches\"",
      "stack_out": [
        "materialized_values%0#0",
        "\"total_searches\""
      ]
    },
    "392": {
      "op": "swap",
      "stack_out": [
        "\"total_searches\"",
        "materialized_values%0#0"
      ]
    },
    "393": {
      "op": "app_global_put",
      "stack_out": []
    },
    "394": {
      "op": "pushbytes \"Search results for: \"",
      "defined_out": [
        "\"Search results for: \""
      ],
      "stack_out": [
        "\"Search results for: \""
      ]
    },
    "416": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"Search results for: \"",
        "search_term#0 (copy)"
      ],
      "stack_out": [
        "\"Search results for: \"",
        "search_term#0 (copy)"
      ]
    },
    "418": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "419": {
      "op": "pushbytes \" (Found agencies will be listed here)\"",
      "defined_out": [
        "\" (Found agencies will be listed here)\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\" (Found agencies will be listed here)\""
      ]
    },
    "458": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "459": {
      "retsub": true,
      "op": "retsub"
    },
    "460": {
      "subroutine": "smart_contracts.hello_world.contract.HelloWorld.get_agency_count",
      "params": {},
      "block": "get_agency_count",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "461": {
      "op": "bytec_1 // \"total_agencies\"",
      "defined_out": [
        "\"total_agencies\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_agencies\""
      ]
    },
    "462": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "463": {
      "error": "check self.total_agencies exists",
      "op": "assert // check self.total_agencies exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "464": {
      "retsub": true,
      "op": "retsub"
    },
    "465": {
      "subroutine": "smart_contracts.hello_world.contract.HelloWorld.get_search_count",
      "params": {},
      "block": "get_search_count",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "466": {
      "op": "bytec_2 // \"total_searches\"",
      "defined_out": [
        "\"total_searches\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_searches\""
      ]
    },
    "467": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "468": {
      "error": "check self.total_searches exists",
      "op": "assert // check self.total_searches exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "469": {
      "retsub": true,
      "op": "retsub"
    },
    "470": {
      "subroutine": "smart_contracts.hello_world.contract.HelloWorld.hello",
      "params": {
        "name#0": "bytes"
      },
      "block": "hello",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "473": {
      "op": "pushbytes \"Hello, \"",
      "defined_out": [
        "\"Hello, \""
      ],
      "stack_out": [
        "\"Hello, \""
      ]
    },
    "482": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"Hello, \"",
        "name#0 (copy)"
      ],
      "stack_out": [
        "\"Hello, \"",
        "name#0 (copy)"
      ]
    },
    "484": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "485": {
      "retsub": true,
      "op": "retsub"
    }
  }
}