{
    "name": "HelloWorld",
    "structs": {},
    "methods": [
        {
            "name": "hello",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Test connectivity",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "register_agency",
            "args": [
                {
                    "type": "string",
                    "name": "agency_name"
                },
                {
                    "type": "string",
                    "name": "description"
                },
                {
                    "type": "string",
                    "name": "contact_info"
                },
                {
                    "type": "string",
                    "name": "wallet_address"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Register agency with wallet address for escrow",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "search_agencies",
            "args": [
                {
                    "type": "string",
                    "name": "search_term"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Search agencies by name or service",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_all_agencies",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Get all registered agencies",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_stats",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Get service statistics",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_service_info",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Get service information",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 3
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "agency_count": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "YWdlbmN5X2NvdW50"
                },
                "search_count": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "c2VhcmNoX2NvdW50"
                },
                "agencies_list": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "YWdlbmNpZXNfbGlzdA=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        136,
                        220,
                        244,
                        268,
                        298,
                        346
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        381
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        139,
                        223,
                        247,
                        271,
                        301,
                        349
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        461,
                        604,
                        660
                    ],
                    "errorMessage": "check self.agencies_list exists"
                },
                {
                    "pc": [
                        474,
                        682
                    ],
                    "errorMessage": "check self.agency_count exists"
                },
                {
                    "pc": [
                        590,
                        718
                    ],
                    "errorMessage": "check self.search_count exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAAEmCAxhZ2VuY3lfY291bnQMc2VhcmNoX2NvdW50DWFnZW5jaWVzX2xpc3QEFR98dQEwATEBfAEyMRhAAAwoJwRnKScEZyqAAGcxG0EBI4IGBAK+zhEEqpBKygSY/52HBJLOVl8EFJidKwTgnYTANhoAjgYA1ACkAIYAbgBWAAIiQzEZFEQxGESASBUffHUAQkFsZ29yYW5kIEVzY3JvdyBTZXJ2aWNlIC0gQ29ubmVjdGluZyBDbGllbnRzIHdpdGggVHJ1c3RlZCBBZ2VuY2llc7AjQzEZFEQxGESIAcRJFRZXBgJMUCtMULAjQzEZFEQxGESIAZZJFRZXBgJMUCtMULAjQzEZFEQxGEQ2GgFXAgCIAStJFRZXBgJMUCtMULAjQzEZFEQxGEQ2GgFXAgA2GgJXAgA2GgNXAgA2GgRXAgCIAGZJFRZXBgJMUCtMULAjQzEZFEQxGEQ2GgFXAgCIABlJFRZXBgJMUCtMULAjQzEZQP8JMRgURCNDigEBgAZIZWxsbyCL/1CAHSAtIFdlbGNvbWUgdG8gRXNjcm93IFNlcnZpY2UhUImKBAGL/CcGUIv9UCcGUIv+UCcGUIv/UIABO1AiKmVETFAqTGciKGVMSU8CRCcEEkEAOygnBWeAD1NVQ0NFU1M6QWdlbmN5IIv8UIAeIHJlZ2lzdGVyZWQgZm9yIGVzY3JvdyBzZXJ2aWNlUEyJiwAnBRJBAAcoJwdnQv+6iwAnBxJBAAgogAEzZ0L/qiiAAjMrZ0L/oYoBASIpZUxJTwJEJwQSQQAkKScFZyIqZUSAD1NFQVJDSF9SRVNVTFRTOov/UIABOlBMUEyJiwAnBRJBAAcpJwdnQv/RKYACMitnQv/IIiplRIANQUxMX0FHRU5DSUVTOkxQiSIoZUSAD1NUQVRTOkFnZW5jaWVzOkxQgAo6U2VhcmNoZXM6UCIpZURQiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 9,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}